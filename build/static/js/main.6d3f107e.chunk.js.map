{"version":3,"sources":["components/partials/Table/Table.module.scss","components/partials/Header/Header.module.scss","components/partials/Footer/Footer.module.scss","components/partials/Button/Button.module.scss","components/pages/Settings/SettingsForm/SettingsForm.module.scss","components/partials/Filters/Filters.module.scss","components/partials/Header/Menu/Menu.module.scss","components/partials/Header/Menu/Menu.jsx","components/partials/Header/Header.jsx","components/partials/Footer/Footer.jsx","components/partials/Table/Table.jsx","components/partials/Filters/RolesFilter/RolesFilter.jsx","components/partials/Filters/TextFilter/TextFilter.jsx","components/partials/Filters/Filters.jsx","components/partials/Modal/Modal.jsx","components/partials/Properties/Properties.jsx","components/partials/Button/Button.jsx","components/pages/Data/Data.jsx","api/api.js","utils/filterDataHelpers.js","redux/filters-reducer.js","redux/common-reducer.js","redux/filters-selectors.js","redux/common-selectors.js","components/pages/Data/DataContainer.jsx","utils/parseCsvToJson.js","utils/validation.js","components/partials/FormControl/FormControl.jsx","components/pages/Settings/SettingsForm/SettingsForm.jsx","components/pages/Settings/Settings.jsx","components/pages/Settings/SettingsContainer.jsx","components/pages/Changes/Changes.jsx","components/pages/Changes/ChangesContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/partials/Modal/Modal.module.scss","components/partials/Properties/Properties.module.scss"],"names":["module","exports","Menu","props","className","s","menu","menu__item","activeClassName","active","menu__link","to","Header","header","Footer","footer","Table","data","headings","setModalData","headingsMarkup","map","name","key","rowsMarkup","tdElements","parameters","onClick","JSON","stringify","request","table__wrapper","table","RolesFilter","roles","useState","currentValue","value","setValue","rolesOptions","role","filter","filter__label","filter__input","onChange","e","target","getFilteredResults","TextFilter","timer","setTimer","filter_toEnd","clearTimeout","setTimeout","type","Filters","rolesFilterValue","filtersValues","filter_by_roles","textFilterValue","filter_by_text","filters","action","Modal","modal__wrapper","includes","closeModal","modal","modal__contain","modal__body","modal__header","title","modal__closeBtn","modal__main","children","Property","obj","dataType","toString","call","slice","displayMode","setDisplayMode","valueClass","toggleClass","keys","Object","keysMarkup","i","length","push","list","Properties","Button","label","btn","Data","setTableData","dataUrl","fileUrl","tableData","tableHeadings","handleSetTableData","isModalActive","modalData","commonDataApi","fetch","then","r","filterDataHelpers","filterByRole","result","item","filterByText","text","columns","SET_FILTER","CLEAR_FILTERS","initialState","results","textTimer","filtersReducer","state","console","log","SET_DATA","SET_CHANGES","SET_ROLES","SHOW_MODAL","CLOSE_MODAL","SET_FILE_URL","url","changes","showModal","setChanges","commonReducer","getFiltersValues","getFileUrl","common","getChanges","getCommonHeadings","getRoles","getModalDisplayMode","getCommonDataSuper","createSelector","filteredData","getModalDataSuper","DataContainer","this","React","Component","connect","dispatch","response","str","split","cellNames","rows","row","rowCells","dataParsed","forEach","index","replace","parse","parseCsvToJson","lastTableDataPlane","localStorage","getItem","setItem","lastDataTextsArr","setTableDataChanges","setData","setRolesSuccess","getState","setFilter","clonedData","resultData","currentDataResults","setResultsSuccess","required","reg","found","match","FormInput","input","meta","touched","error","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","Settings","initialValues","file_url","submitSettings","SettingsContainer","setFileUrl","Changes","emptyChangesStatusText","tableDataChanges","ChangesContainer","App","id","path","render","exact","Boolean","window","location","hostname","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6d3f107e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3359v\",\"parameters\":\"Table_parameters__36Eb3\",\"table__wrapper\":\"Table_table__wrapper__3qNQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ftI2\",\"header__nav\":\"Header_header__nav__11LGB\",\"header__parts\":\"Header_header__parts__13Xpa\",\"header__part\":\"Header_header__part__2LgI8\",\"header__part_logo\":\"Header_header__part_logo__P-5CM\",\"header__part_searchForm\":\"Header_header__part_searchForm__19Z-p\",\"header__part_nav\":\"Header_header__part_nav__29rAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__6cihT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__O42EG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SettingsForm_input__3w0hU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__MAxSv\",\"filter\":\"Filters_filter__p35Zx\",\"filter_toEnd\":\"Filters_filter_toEnd__31X9T\",\"filter__label\":\"Filters_filter__label__1MUKm\",\"filter__input\":\"Filters_filter__input__3ZZA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3BYBb\",\"menu__item\":\"Menu_menu__item__3iZbd\",\"menu__link\":\"Menu_menu__link__3-9DX\",\"active\":\"Menu_active__1nug2\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Menu.module.scss\";\r\n\r\nconst Menu = props => {\r\n    return (\r\n        <ul className={s.menu}>\r\n            <li className={s.menu__item}>\r\n                <NavLink activeClassName={s.active} className={s.menu__link} to=\"/data\">Data</NavLink>\r\n            </li>\r\n            <li className={s.menu__item}>\r\n                <NavLink activeClassName={s.active} className={s.menu__link} to=\"/settings\">Settings</NavLink>\r\n            </li>\r\n            <li className={s.menu__item}>\r\n                <NavLink activeClassName={s.active} className={s.menu__link} to=\"/changes\">Changes</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport Menu from \"./Menu/Menu\";\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className={`app__header ${s.header}`}>\r\n            <div className=\"app__width\">\r\n                <nav><Menu/></nav>\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Footer.module.scss\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className={`app__footer ${s.footer}`}>2020 test work by Applesinkin</footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport s from \"./Table.module.scss\";\r\n\r\nconst Table = ({data, headings, setModalData}) => {\r\n\r\n    let headingsMarkup = [];\r\n    if (headings) {\r\n        headingsMarkup = headings.map(name => {\r\n            return <th key={name}>{name}</th>\r\n        });\r\n    }\r\n\r\n    let rowsMarkup = [];\r\n    if (data && headings) {\r\n        rowsMarkup = data.map(data => {\r\n            let tdElements = headings.map(name => {\r\n                if (name === \"parameters\") {\r\n                    let handleOpenModal = () => {\r\n                        setModalData(data[name]);\r\n                    };\r\n                    return <td key={name}>\r\n                        <div className={s.parameters} onClick={handleOpenModal}>{JSON.stringify(data[name])}</div>\r\n                    </td>;\r\n                }\r\n                return <td key={name}>{data[name]}</td>;\r\n            });\r\n            return (\r\n                <tr key={data.request}>{tdElements}</tr>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={s.table__wrapper}>\r\n            <table className={s.table}>\r\n                <thead>\r\n                <tr>{headingsMarkup}</tr>\r\n                </thead>\r\n                <tbody>{rowsMarkup}</tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Table;","import React, {useState} from \"react\";\r\nimport s from '../Filters.module.scss';\r\n\r\nconst RolesFilter = ({roles, ...props}) => {\r\n\r\n    const [value, setValue] = useState(props.currentValue);\r\n    if (value !== props.currentValue) {\r\n        setValue(props.currentValue);\r\n    }\r\n\r\n    const handleSetValue = (e) => {\r\n        let value = e.target.value;\r\n        setValue(value);\r\n        props.getFilteredResults('filter_by_roles', value);\r\n    };\r\n\r\n    let rolesOptions = roles.map(role => {\r\n        return <option key={role} value={role}>{role}</option>\r\n    });\r\n\r\n    return (\r\n        <div className={s.filter}>\r\n            <label className={s.filter__label}>Filter by roles</label>\r\n            <select className={s.filter__input} value={value} onChange={handleSetValue}>\r\n                <option value=\"\">None</option>\r\n                {rolesOptions}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RolesFilter;","import React, {useState} from \"react\";\r\nimport s from \"../Filters.module.scss\";\r\n\r\nconst TextFilter = (props) => {\r\n\r\n    const [value, setValue] = useState(props.currentValue);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    if (value !== props.currentValue && !timer) {\r\n        setValue(props.currentValue);\r\n    }\r\n\r\n    const handleSetValue = (e) => {\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n\r\n        let value = e.target.value;\r\n        setValue(value);\r\n\r\n        setTimer( setTimeout( () => {\r\n            props.getFilteredResults('filter_by_text', value);\r\n            setTimer(null);\r\n        }, 500 ) );\r\n    };\r\n\r\n    return (\r\n        <div className={`${s.filter} ${s.filter_toEnd}`}>\r\n            <label className={s.filter__label}>Filter by text</label>\r\n            <input className={s.filter__input} onChange={handleSetValue} name=\"filter_by_text\" type=\"text\" value={value} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TextFilter;","import React from \"react\";\r\nimport RolesFilter from \"./RolesFilter/RolesFilter\";\r\nimport TextFilter from \"./TextFilter/TextFilter\";\r\nimport s from \"./Filters.module.scss\";\r\n\r\nconst Filters = (props) => {\r\n\r\n    let rolesFilterValue = props.filtersValues.filter_by_roles;\r\n    let textFilterValue = props.filtersValues.filter_by_text;\r\n\r\n    return (\r\n        <nav className={s.filters} action=\"\">\r\n            <RolesFilter currentValue={rolesFilterValue} getFilteredResults={props.getFilteredResults} roles={props.roles}/>\r\n            <TextFilter currentValue={textFilterValue} getFilteredResults={props.getFilteredResults}/>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Filters;","import React from \"react\";\r\nimport s from \"./Modal.module.scss\";\r\nconst Modal = (props) => {\r\n\r\n    let handleClick = (e) => {\r\n        if ( e.target.className.includes('js-modal-close') ) {\r\n            props.closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`${s.modal__wrapper} js-modal-close`} onClick={handleClick}>\r\n            <div className={s.modal}>\r\n                <div className={s.modal__contain}>\r\n                    <div className={s.modal__body}>\r\n                        <div className={s.modal__header}>\r\n                            <h3>{props.title}</h3>\r\n                            <div><button className={s.modal__closeBtn} onClick={props.closeModal}>[X] Close</button></div>\r\n                        </div>\r\n                        <div className={s.modal__main}>{props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;","import React, {useState} from \"react\";\r\nimport s from \"./Properties.module.scss\";\r\n\r\nlet getClass = (obj) => {\r\n    return {}.toString.call(obj).slice(8, -1);\r\n}\r\n\r\nconst Property = ({name = null, data = null}) => {\r\n    let dataType = getClass(data);\r\n\r\n    let [displayMode, setDisplayMode] = useState(true);\r\n    let valueClass = displayMode ? 'opened' : 'closed';\r\n    let toggleClass = () => {\r\n        setDisplayMode(!displayMode);\r\n    }\r\n\r\n    if (data === null\r\n        || typeof data === \"string\"\r\n        || typeof data === \"number\"\r\n        || typeof data === \"boolean\") {\r\n\r\n        return <>\r\n            <dt className={s[valueClass]} onClick={toggleClass}>{name} <small>({dataType})</small></dt>\r\n            <dd className={s[valueClass]}>{data}</dd>\r\n        </>\r\n\r\n    }  else if (typeof data === 'object') {\r\n\r\n        let keys = Object.keys(data);\r\n        let keysMarkup = [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            keysMarkup.push(<dl className={s.list} key={key}><Property name={key} data={data[key]} /></dl>);\r\n        }\r\n\r\n        return <>\r\n            <dt className={s[valueClass]} onClick={toggleClass}>{name} <small>({dataType})</small></dt>\r\n            <dd className={s[valueClass]}>{keysMarkup}</dd>\r\n        </>\r\n    }\r\n\r\n    return \"\";\r\n};\r\n\r\nconst Properties = ({data}) => {\r\n\r\n    return (\r\n        <div>\r\n            <dl className={s.list}>\r\n                <Property name=\"json\" data={data} />\r\n            </dl>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Properties;","import React from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\nconst Button = ({label = \"button\", onClick, ...props}) => {\r\n    return (\r\n        <button className={s.btn} type={props.type} onClick={onClick}>{label}</button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Table from \"../../partials/Table/Table\";\r\nimport Filters from \"../../partials/Filters/Filters\";\r\nimport Modal from \"../../partials/Modal/Modal\";\r\nimport Properties from \"../../partials/Properties/Properties\";\r\nimport Button from \"../../partials/Button/Button\";\r\n\r\nconst Data = ({setTableData, ...props}) => {\r\n\r\n    const dataUrl = props.fileUrl;\r\n\r\n    let handleGetData = () => {\r\n        props.handleSetTableData(dataUrl)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Data</h2>\r\n\r\n            <Filters getFilteredResults={props.getFilteredResults}\r\n                     filtersValues={props.filtersValues}\r\n                     roles={props.roles}/>\r\n\r\n            <Table data={props.tableData}\r\n                   setModalData={props.setModalData}\r\n                   headings={props.tableHeadings}/>\r\n\r\n            <div>\r\n                <Button onClick={handleGetData} label={props.tableData ? \"Update CSV\" : \"Download CSV\"}/>\r\n            </div>\r\n\r\n            {props.isModalActive &&\r\n                <Modal title=\"Properties\" closeModal={props.closeModal}>\r\n                    <Properties data={props.modalData}/>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Data;","// Common data DAL\r\nexport const commonDataApi = {\r\n    getData(dataUrl) {\r\n        return fetch(dataUrl)\r\n            .then( r => {\r\n                return r;\r\n            } );\r\n    }\r\n};","const filterDataHelpers = {\r\n\r\n    filterByRole(data = [], role = null) {\r\n        if (!data || !data.length)\r\n            return data;\r\n        const result = data.filter( (item) => {\r\n            if (item[\"role\"] === role) {\r\n                return true;\r\n            }\r\n            return false;\r\n        } );\r\n        return result;\r\n    },\r\n\r\n\r\n    filterByText(data = [], text = \"\") {\r\n        if (!text) {\r\n            return data;\r\n        }\r\n\r\n        const result = data.filter( (item) => {\r\n            let columns = Object.keys(item);\r\n            for (let i = 0; i < columns.length; i++) {\r\n                let name = columns[i];\r\n\r\n                if (name === \"role\")\r\n                    continue;\r\n\r\n                let value = item[name];\r\n                if (name === \"parameters\") {\r\n                    value = JSON.stringify(value);\r\n                }\r\n                if (value && value.includes(text)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } );\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport default filterDataHelpers","import filterDataHelpers from \"../utils/filterDataHelpers\";\r\n\r\nconst SET_SEARCH_RESULTS = 'mindless/search/SET_SEARCH_RESULTS';\r\nconst SET_FILTER = 'mindless/search/SET_FILTER';\r\nconst CLEAR_FILTERS = 'mindless/search/CLEAR_FILTERS';\r\n\r\nconst initialState = {\r\n    results: null,\r\n    filters: {\r\n        filter_by_roles: \"\",\r\n        filter_by_text: \"\"\r\n    },\r\n    textTimer: null\r\n};\r\n\r\nconst filtersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_SEARCH_RESULTS:\r\n            return {\r\n                ...state,\r\n                results: action.data\r\n            };\r\n\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    [action.name]: action.value,\r\n                }\r\n            };\r\n\r\n        case CLEAR_FILTERS:\r\n\r\n            console.log(state.filters);\r\n\r\n            return {\r\n                ...state,\r\n                results: null,\r\n                filters: {\r\n                    ...state.filters,\r\n                    filter_by_roles: \"\",\r\n                    filter_by_text: \"\"\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setResultsSuccess = (data) => ({type: SET_SEARCH_RESULTS, data});\r\n\r\nexport const setFilter = (name, value) => ({type: SET_FILTER, name, value});\r\nexport const clearFilters = () => ({type: CLEAR_FILTERS});\r\n\r\nexport const getFilteredResults = (name, value) => (dispatch, getState) => {\r\n    dispatch( setFilter(name, value) );\r\n\r\n    const data = getState().common.data;\r\n    if (!data)\r\n        return;\r\n\r\n    const filters = getState().filters.filters;\r\n    const clonedData = [...data];\r\n\r\n    let resultData = [];\r\n\r\n    if (filters.filter_by_roles) {\r\n        let currentDataResults = resultData.length ? resultData[resultData.length - 1] : clonedData;\r\n        let data = filterDataHelpers.filterByRole(currentDataResults, filters.filter_by_roles);\r\n        resultData.push(data);\r\n    }\r\n\r\n    if (filters.filter_by_text) {\r\n        let currentDataResults = resultData.length ? resultData[resultData.length - 1] : clonedData;\r\n        let data = filterDataHelpers.filterByText(currentDataResults, filters.filter_by_text);\r\n        resultData.push(data);\r\n    }\r\n\r\n    dispatch( setResultsSuccess(resultData[resultData.length - 1]) );\r\n};\r\n\r\nexport default filtersReducer;\r\n","import {commonDataApi} from \"../api/api\";\r\nimport {parseCsvToJson} from \"../utils/parseCsvToJson\";\r\nimport {clearFilters} from \"./filters-reducer\";\r\n\r\nconst SET_DATA = 'mindless/common/SET_DATA';\r\nconst SET_CHANGES = 'mindless/common/SET_CHANGES';\r\nconst SET_ROLES = 'mindless/common/SET_ROLES';\r\nconst SHOW_MODAL = 'mindless/common/SHOW_MODAL';\r\nconst CLOSE_MODAL = 'mindless/common/CLOSE_MODAL';\r\nconst SET_FILE_URL = 'mindless/common/SET_FILE_URL';\r\n\r\nconst initialState = {\r\n    url: \"https://mindless-corps.000webhostapp.com/file.csv\",\r\n    data: null,\r\n    changes: null,\r\n    headings: null,\r\n    roles: [],\r\n    modalData: null,\r\n    showModal: false,\r\n};\r\n\r\nconst commonReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                headings: action.headings,\r\n            };\r\n\r\n        case SET_ROLES:\r\n            return {\r\n                ...state,\r\n                roles: action.roles\r\n            };\r\n\r\n        case SET_FILE_URL:\r\n            return {\r\n                ...state,\r\n                url: action.fileUrl\r\n            };\r\n\r\n        case SET_CHANGES:\r\n            return {\r\n                ...state,\r\n                changes: action.data\r\n            }\r\n\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalData: action.data,\r\n                showModal: true\r\n            };\r\n\r\n        case CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                modalData: null,\r\n                showModal: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setData = (data, headings) => ({type: SET_DATA, data, headings});\r\nexport const setChanges = (data) => ({type: SET_CHANGES, data});\r\nexport const setRolesSuccess = (roles) => ({type: SET_ROLES, roles});\r\nexport const setModalData = (data) => ({type: SHOW_MODAL, data});\r\nexport const closeModal = () => ({type: CLOSE_MODAL});\r\nexport const setFileUrl = (fileUrl) => ({type: SET_FILE_URL, fileUrl});\r\n\r\n\r\nexport const setTableDataChanges = (data) => (dispatch) => {\r\n    let lastTableDataPlane = localStorage.getItem('lastTableData');\r\n    if (!lastTableDataPlane ||  '[]' === lastTableDataPlane) {\r\n        localStorage.setItem('lastTableData', JSON.stringify(data));\r\n        dispatch(setChanges(data));\r\n        return;\r\n    }\r\n    let lastDataTextsArr = JSON.parse(lastTableDataPlane).map( item => {\r\n        return JSON.stringify(item);\r\n    } );\r\n    let currentDataTextsArr = data.map( item => {\r\n        return JSON.stringify(item);\r\n    } );\r\n    let changesTextsArr = currentDataTextsArr.filter( item => {\r\n        if (lastDataTextsArr.includes(item)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    } );\r\n    let changes = changesTextsArr.map( item => {\r\n        return JSON.parse(item);\r\n    } );\r\n    localStorage.setItem('lastTableData', JSON.stringify(data));\r\n    dispatch(setChanges(changes));\r\n};\r\n\r\n\r\nexport const setTableData = (url) => (dispatch) => {\r\n\r\n    return commonDataApi.getData(url)\r\n        .then( (r) => r.text())\r\n        .then(response => {\r\n            if (!response)\r\n                return;\r\n\r\n            const data = parseCsvToJson(response);\r\n\r\n            const roles = [];\r\n            data.data.forEach( data => {\r\n                if (data.role && !roles.includes(data.role))\r\n                    roles.push(data.role);\r\n            } );\r\n\r\n            dispatch( clearFilters() );\r\n            dispatch( setTableDataChanges(data.data) );\r\n            dispatch( setData(data.data, data.headings) );\r\n            dispatch( setRolesSuccess(roles) );\r\n        })\r\n};\r\n\r\nexport default commonReducer;","export const getFilteredResultsSelector = (state) => state.filters.results;\r\nexport const getFiltersValues = (state) => state.filters.filters;","import {createSelector} from \"reselect\";\r\nimport {getFilteredResultsSelector} from \"./filters-selectors\";\r\n\r\nexport const getFileUrl = (state) => state.common.url;\r\nexport const getTableData = (state) => state.common.data;\r\nexport const getChanges = (state) => state.common.changes;\r\nexport const getCommonHeadings = (state) => state.common.headings;\r\nexport const getRoles = (state) => state.common.roles;\r\nexport const getModalData = (state) => state.common.modalData;\r\nexport const getModalDisplayMode = (state) => state.common.showModal;\r\n\r\nexport const getCommonDataSuper = createSelector( getTableData, getFilteredResultsSelector, (data, filteredData) => {\r\n    let resultData = filteredData ? filteredData : data;\r\n    return resultData;\r\n} );\r\n\r\nexport const getModalDataSuper = createSelector(getModalData, (data) => {\r\n    return data;\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Data from \"./Data\";\r\nimport {closeModal, setModalData, setTableData} from \"../../../redux/common-reducer\";\r\nimport {\r\n    getFileUrl,\r\n    getModalDataSuper, getModalDisplayMode,\r\n    getRoles,\r\n    getCommonDataSuper,\r\n    getCommonHeadings\r\n} from \"../../../redux/common-selectors\";\r\nimport {getFilteredResults} from \"../../../redux/filters-reducer\";\r\nimport {getFiltersValues} from \"../../../redux/filters-selectors\";\r\n\r\nclass DataContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.toggler = true;\r\n    }\r\n\r\n    handleSetTableData = (dataUrl) => {\r\n        // let url = this.toggler ? 'http://localhost:3000/csv/file.csv' : 'http://localhost:3000/csv/file-changed.csv';\r\n        // this.toggler = !this.toggler;\r\n\r\n        this.props.setTableData(dataUrl)\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Data {...this.props} handleSetTableData={this.handleSetTableData}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        fileUrl: getFileUrl(state),\r\n        tableData: getCommonDataSuper(state),\r\n        tableHeadings: getCommonHeadings(state),\r\n        roles: getRoles(state),\r\n        modalData: getModalDataSuper(state),\r\n        isModalActive: getModalDisplayMode(state),\r\n        filtersValues: getFiltersValues(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setTableData,\r\n    getFilteredResults,\r\n    setModalData,\r\n    closeModal\r\n})(DataContainer);","export const parseCsvToJson = (str) => {\r\n\r\n    const data = str.split('\\r');\r\n    const cellNames = data[0].split(';');\r\n    const rows = data.slice(1);\r\n\r\n    const result = {\r\n        headings: cellNames,\r\n        data: []\r\n    };\r\n\r\n    result.data = rows.map( row => {\r\n        const rowCells = row.split(';');\r\n        const dataParsed = {};\r\n        cellNames.forEach( (name, index) => {\r\n            let value = null;\r\n            if (rowCells[index]) {\r\n                value = rowCells[index];\r\n\r\n                if (name === \"parameters\") {\r\n                    value = value.replace(/\"\"/g, \"'\");\r\n                    value = value.replace(/\"/g, \"\");\r\n                    value = value.replace(/'/g, \"\\\"\");\r\n                    value = JSON.parse(value);\r\n                }\r\n            }\r\n\r\n            return dataParsed[name] = value;\r\n        } )\r\n\r\n        return dataParsed;\r\n    } );\r\n\r\n    return result;\r\n};","export const required = (value) => {\r\n    if (!value)\r\n        return 'This field must be required';\r\n\r\n    return undefined;\r\n};\r\n\r\n\r\nexport const url = (value = '') => {\r\n    let reg = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/gm;\r\n    let found = value.match(reg);\r\n\r\n    if (value && !found)\r\n        return `Invalid url format`;\r\n\r\n    return undefined;\r\n};","import React from \"react\";\r\n\r\nexport const FormInput = ({input, meta: {touched, error}, ...props}) => {\r\n    return (\r\n        <div>\r\n            <input {...input} {...props} />\r\n            {touched && error && <span className=\"error-message\">{error}</span>}\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, url} from \"../../../../utils/validation\";\r\nimport {FormInput} from \"../../../partials/FormControl/FormControl\";\r\nimport s from \"./SettingsForm.module.scss\";\r\nimport Button from \"../../../partials/Button/Button\";\r\n\r\nconst SettingsForm = props => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"file_url\"\r\n                   component={FormInput}\r\n                   type=\"text\"\r\n                   className={s.input}\r\n                   validate={[url, required]}/>\r\n            <Button label=\"Submit Settings\" type=\"submit\"/>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"settings\"\r\n})(SettingsForm);","import React from \"react\";\r\nimport SettingsForm from \"./SettingsForm/SettingsForm\";\r\n\r\nconst Settings = props => {\r\n\r\n    const initialValues = {\r\n        file_url: props.fileUrl,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Settings</h2>\r\n            <SettingsForm initialValues={initialValues} onSubmit={props.submitSettings}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Settings from \"./Settings\";\r\nimport {getFileUrl} from \"../../../redux/common-selectors\";\r\nimport {setFileUrl} from \"../../../redux/common-reducer\";\r\n\r\nclass SettingsContainer extends React.Component {\r\n\r\n    submitSettings = (obj) => {\r\n        if (obj.file_url) {\r\n            this.props.setFileUrl(obj.file_url);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <Settings fileUrl={this.props.fileUrl}\r\n                         submitSettings={this.submitSettings}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fileUrl: getFileUrl(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setFileUrl\r\n})(SettingsContainer);","import React from \"react\";\r\nimport Table from \"../../partials/Table/Table\";\r\nimport Modal from \"../../partials/Modal/Modal\";\r\nimport Properties from \"../../partials/Properties/Properties\";\r\n\r\nconst Changes = (props) => {\r\n\r\n    let emptyChangesStatusText = \"\";\r\n    if (!props.tableDataChanges) {\r\n        emptyChangesStatusText = \"You need to download new data first\";\r\n    } else if (!props.tableDataChanges.length) {\r\n        emptyChangesStatusText = \"No changes found\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Changes</h2>\r\n\r\n            {\r\n                !emptyChangesStatusText ?\r\n                    <Table data={props.tableDataChanges}\r\n                           headings={props.tableHeadings}\r\n                           setModalData={props.setModalData}/>\r\n                    : <p>{emptyChangesStatusText}</p>\r\n            }\r\n\r\n            {props.isModalActive &&\r\n                <Modal title=\"Properties\" closeModal={props.closeModal}>\r\n                    <Properties data={props.modalData}/>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Changes;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Changes from \"./Changes\";\r\nimport {getChanges, getCommonHeadings, getModalDataSuper, getModalDisplayMode} from \"../../../redux/common-selectors\";\r\nimport {closeModal, setModalData} from \"../../../redux/common-reducer\";\r\n\r\nclass ChangesContainer extends React.Component {\r\n    render() {\r\n        return <Changes {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        tableDataChanges: getChanges(state),\r\n        tableHeadings: getCommonHeadings(state),\r\n        modalData: getModalDataSuper(state),\r\n        isModalActive: getModalDisplayMode(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setModalData,\r\n    closeModal\r\n})(ChangesContainer);","import React from 'react';\nimport './App.css';\nimport Header from \"./components/partials/Header/Header\";\nimport Footer from \"./components/partials/Footer/Footer\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport DataContainer from \"./components/pages/Data/DataContainer\";\nimport SettingsContainer from \"./components/pages/Settings/SettingsContainer\";\nimport ChangesContainer from \"./components/pages/Changes/ChangesContainer\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <div className=\"app__wrapper\">\n                    <Header/>\n                    <div className=\"app__main\" id=\"main-content\">\n                        <div className=\"app__width\">\n                            <Switch>\n                                <Route path=\"/data\" render={() => <DataContainer/>} />\n                                <Route path=\"/settings\" render={() => <SettingsContainer/>} />\n                                <Route path=\"/changes\" render={() => <ChangesContainer/>} />\n                                <Route exact path=\"/\" render={() => <DataContainer/>} />\n                            </Switch>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport commonReducer from \"./common-reducer\";\r\nimport filtersReducer from \"./filters-reducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n    common: commonReducer,\r\n    filters: filtersReducer,\r\n    form: formReducer\r\n});\r\n\r\nexport default createStore(reducers, applyMiddleware(thunkMiddleware));","// IE support\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1aJg3\",\"modal__wrapper\":\"Modal_modal__wrapper__2eXBS\",\"modal__contain\":\"Modal_modal__contain__2SaMB\",\"modal__body\":\"Modal_modal__body__QrL8q\",\"modal__header\":\"Modal_modal__header__1rHTb\",\"modal__closeBtn\":\"Modal_modal__closeBtn__21RRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Properties_list__243D0\",\"closed\":\"Properties_closed__2V-Q_\"};"],"sourceRoot":""}